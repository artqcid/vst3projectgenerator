//------------------------------------------------------------------------
// @SMTG_SOURCE_COPYRIGHT_HEADER@
//------------------------------------------------------------------------

#pragma once

#include "public.sdk/source/vst/vstaudioeffect.h"

using namespace Steinberg;
using namespace Vst;

namespace @SMTG_VENDOR_NAMESPACE@ {

//------------------------------------------------------------------------
//  @SMTG_PLUGIN_CLASS_NAME@Processor
//------------------------------------------------------------------------
class @SMTG_PLUGIN_CLASS_NAME@Processor : public AudioEffect
{
public:
	@SMTG_PLUGIN_CLASS_NAME@Processor ();
	~@SMTG_PLUGIN_CLASS_NAME@Processor () SMTG_OVERRIDE;

    // Create function
	static FUnknown* createInstance (void* /*context*/) 
	{ 
		return (IAudioProcessor*)new @SMTG_PLUGIN_CLASS_NAME@Processor; 
	}

	//--- ---------------------------------------------------------------------
	// AudioEffect overrides:
	//--- ---------------------------------------------------------------------
	/** Called at first after constructor */
	tresult PLUGIN_API initialize (FUnknown* context) SMTG_OVERRIDE;
	
	/** Called at the end before destructor */
	tresult PLUGIN_API terminate () SMTG_OVERRIDE;
	
	/** Switch the Plug-in on/off */
	tresult PLUGIN_API setActive (TBool state) SMTG_OVERRIDE;

	/** Will be called before any process call */
	tresult PLUGIN_API setupProcessing (ProcessSetup& newSetup) SMTG_OVERRIDE;
	
	/** Asks if a given sample size is supported see SymbolicSampleSizes. */
	tresult PLUGIN_API canProcessSampleSize (int32 symbolicSampleSize) SMTG_OVERRIDE;

	/** Here we go...the process call */
	tresult PLUGIN_API process (ProcessData& data) SMTG_OVERRIDE;
		
	/** For persistence */
	tresult PLUGIN_API setState (IBStream* state) SMTG_OVERRIDE;
	tresult PLUGIN_API getState (IBStream* state) SMTG_OVERRIDE;

	/** Bus Arrangement */
	tresult PLUGIN_API setBusArrangements(SpeakerArrangement* inputs, int32 numIns,
		SpeakerArrangement* outputs,
		int32 numOuts) SMTG_OVERRIDE;
//------------------------------------------------------------------------
protected:
	ParamValue mGain;
	bool mBypass;
};

//------------------------------------------------------------------------
} // namespace @SMTG_VENDOR_NAMESPACE@
